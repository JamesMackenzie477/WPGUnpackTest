<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- PHYSX_CHECK는 OR연산만 지원 한다 -> 다른 연산이 필요할 경우 개발이 필요하다 -->
<!-- CONDITION_CHECK는 AND만 지원 한다. 컨디션은 항상 TRUE일 경우만 통과된다. -->
<!-- INPUT의 경우 첫 노드의 머리가 진입 지점이 된다. INPUT태그는 AND연산만 된다 -->
<!-- ZOOM의 경우 = NOT, HALF, FULL 세가지로 체크 가능하다 -->
<!-- SPRINT의 경우 TRUE, FALSE로 체크 가능하다 -->
<!-- NOT_LAST와 NOT_LASTSUB의 경우, & 연산만 지원 한다 -->
<!-- CHGSTANCE를 사용 할때는 반드시 CAN_STANCE_CHANGE를 조건 검사 한다. -->

<!-- 드론설치 -->
<IF CONDITION_CHECK="IS_DEPLOY" NOT_LASTSUB="S_WEAPONSWITCH & S_DEPLOY & S_SWITCHWEAPONDOWNARM">
    <CHGNOSPRINT/>
    <DOSUB>S_DEPLOY</DOSUB>
</IF>


<I_FIRE CONDITION_CHECK="IS_DEPLOY_READY">
    <CHGNOSPRINT/>
    <DRONE_DEPLOY/>
</I_FIRE>
<!-- 달리기 -->
<I_SPRINT PHYSX_CHECK="P_OTG | P_ITA | P_JMP" ZOOM="FULL">
    <NOSPRINTHOLD/>
    <CHGNOSPRINT/>
</I_SPRINT>
<I_SPRINT PHYSX_CHECK="P_OTG | P_ITA | P_JMP" SPRINT="TRUE">
    <NOSPRINTHOLD/>
    <CHGNOSPRINT/>
</I_SPRINT>
<I_SPRINTHOLD INPUT="I_MOVE1" PHYSX_CHECK="P_OTG" CONDITION_CHECK="IS_SPRINT_ACTION" CAN_STANCE_CHANGE="T_STAND"
NOT_LASTSUB="S_FIRE & S_MELEE & S_SWITCHWEAPONRETURNARM & S_THROW & S_THROW_FIRE">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <CHGNOZOOM/>    
    <DO>A_SPRINTFORWARD</DO>
</I_SPRINTHOLD>
<I_SPRINTHOLD INPUT="I_MOVE8" PHYSX_CHECK="P_OTG" CONDITION_CHECK="IS_SPRINT_ACTION" CAN_STANCE_CHANGE="T_STAND"
NOT_LASTSUB="S_FIRE & S_MELEE & S_SWITCHWEAPONRETURNARM & S_THROW & S_THROW_FIRE">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <CHGNOZOOM/>
    <DO>A_SPRINTFORWARDLEFT</DO>
</I_SPRINTHOLD>
<I_SPRINTHOLD INPUT="I_MOVE2" PHYSX_CHECK="P_OTG" CONDITION_CHECK="IS_SPRINT_ACTION" CAN_STANCE_CHANGE="T_STAND"
NOT_LASTSUB="S_FIRE & S_MELEE & S_SWITCHWEAPONRETURNARM & S_THROW & S_THROW_FIRE">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <CHGNOZOOM/>
    <DO>A_SPRINTFORWARDRIGHT</DO>
</I_SPRINTHOLD>
<!-- 무기전환 -->
<I_SWITCHWEAPON CONDITION_CHECK="IS_SWITCH_WEAPON" NOT_LAST="A_DEAD"
 NOT_LASTSUB="S_MELEE & S_THROW & S_THROW_FIRE">
    <CHGNOZOOM/>
    <SWITCH_WEAPON/>
</I_SWITCHWEAPON>

<!-- 사망 중에 조준, 달리기 모션 안 나가게 -->
<IF LAST="A_DEAD">
    <CHGNOSPRINT/>
    <CHGNOZOOM/>
    <DOSUB>S_NONE</DOSUB>
    <DO>A_DEAD</DO>
</IF>

<!-- 담넘기 트리거 처리 -->
<!-- CLIMB -->
<I_JUMP TRIGGER="CLIMB" STANCE_RATE="T_STAND | T_CROUCH" CLIMB_ACTION="FALSE" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <DO>A_CLIMBON</DO>
</I_JUMP>
<I_MOVE0 TRIGGER="CLIMB" LAST="A_CLIMBON" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <DO>A_CLIMBON</DO>
</I_MOVE0>
<I_MOVE1 TRIGGER="CLIMB" LAST="A_CLIMBON" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <DO>A_CLIMBON</DO>
</I_MOVE1>
<I_MOVE2 TRIGGER="CLIMB" LAST="A_CLIMBON" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <DO>A_CLIMBON</DO>
</I_MOVE2>
<I_MOVE8 TRIGGER="CLIMB" LAST="A_CLIMBON" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <DO>A_CLIMBON</DO>
</I_MOVE8>
<!-- CLIMBOVER ,WALK -->
<I_JUMP TRIGGER="CLIMBOVER" SPRINT="FALSE"  STANCE_RATE="T_STAND | T_CROUCH" CLIMB_ACTION="FALSE" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <DO>A_CLIMBOVER</DO>
</I_JUMP>
<I_MOVE0 TRIGGER="CLIMBOVER" SPRINT="FALSE" LAST="A_CLIMBOVER" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <DO>A_CLIMBOVER</DO>
</I_MOVE0>
<I_MOVE1 TRIGGER="CLIMBOVER" SPRINT="FALSE" LAST="A_CLIMBOVER" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <DO>A_CLIMBOVER</DO>
</I_MOVE1>
<I_MOVE2 TRIGGER="CLIMBOVER" SPRINT="FALSE" LAST="A_CLIMBOVER" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <DO>A_CLIMBOVER</DO>
</I_MOVE2>
<I_MOVE8 TRIGGER="CLIMBOVER" SPRINT="FALSE" LAST="A_CLIMBOVER" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <DO>A_CLIMBOVER</DO>
</I_MOVE8>
<!-- CLIMBOVER SPRINT -->
<I_JUMP TRIGGER="CLIMBOVER" SPRINT="TRUE"  STANCE_RATE="T_STAND" CLIMB_ACTION="FALSE" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <DO>A_SPRINT_CLIMBOVER</DO>
</I_JUMP>
<I_MOVE0 TRIGGER="CLIMBOVER" STANCE_RATE="T_STAND" SPRINT="TRUE" LAST="A_SPRINT_CLIMBOVER" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <DO>A_SPRINT_CLIMBOVER</DO>
</I_MOVE0>
<I_MOVE1 TRIGGER="CLIMBOVER" STANCE_RATE="T_STAND" SPRINT="TRUE" LAST="A_SPRINT_CLIMBOVER" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <DO>A_SPRINT_CLIMBOVER</DO>
</I_MOVE1>
<I_MOVE2 TRIGGER="CLIMBOVER" STANCE_RATE="T_STAND" SPRINT="TRUE" LAST="A_SPRINT_CLIMBOVER" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <DO>A_SPRINT_CLIMBOVER</DO>
</I_MOVE2>
<I_MOVE8 TRIGGER="CLIMBOVER" STANCE_RATE="T_STAND" SPRINT="TRUE" LAST="A_SPRINT_CLIMBOVER" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <DO>A_SPRINT_CLIMBOVER</DO>
</I_MOVE8>

<!-- 사다리 트리거 처리 -->
<I_MOVE1 PHYSX_CHECK="P_CBG" TRIGGER="LADDER" NOT_LAST="A_CLIMBEND & A_CLIMBFORWARD" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <CHGNOZOOM/>
    <DO>A_CLIMBFORWARD</DO>
</I_MOVE1>
<I_MOVE2 PHYSX_CHECK="P_CBG" TRIGGER="LADDER" NOT_LAST="A_CLIMBEND & A_CLIMBFORWARD" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <CHGNOZOOM/>    
    <DO>A_CLIMBFORWARD</DO>
</I_MOVE2>
<I_MOVE3 PHYSX_CHECK="P_CBG" TRIGGER="LADDER" NOT_LAST="A_CLIMBEND" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <CHGNOZOOM/>    
    <DO>A_CLIMBIDLE</DO>
</I_MOVE3>
<I_MOVE7 PHYSX_CHECK="P_CBG" TRIGGER="LADDER" NOT_LAST="A_CLIMBEND" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <CHGNOZOOM/>    
    <DO>A_CLIMBIDLE</DO>
</I_MOVE7>
<I_MOVE8 PHYSX_CHECK="P_CBG" TRIGGER="LADDER" NOT_LAST="A_CLIMBEND & A_CLIMBFORWARD" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <CHGNOZOOM/>    
    <DO>A_CLIMBFORWARD</DO>
</I_MOVE8>
<I_MOVE4 PHYSX_CHECK="P_CBG" TRIGGER="LADDER" NOT_LAST="A_CLIMBBACKWARD" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <CHGNOZOOM/>    
    <DO>A_CLIMBBACKWARD</DO>
</I_MOVE4>
<I_MOVE5 PHYSX_CHECK="P_CBG" TRIGGER="LADDER" NOT_LAST="A_CLIMBBACKWARD" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <CHGNOZOOM/>    
    <DO>A_CLIMBBACKWARD</DO>
</I_MOVE5>
<I_MOVE6 PHYSX_CHECK="P_CBG" TRIGGER="LADDER" NOT_LAST="A_CLIMBBACKWARD" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <CHGNOZOOM/>    
    <DO>A_CLIMBBACKWARD</DO>
</I_MOVE6>
<I_MOVE0 PHYSX_CHECK="P_CBG" TRIGGER="LADDER" NOT_LAST="A_CLIMBIDLE" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <CHGNOZOOM/>    
    <DO>A_CLIMBIDLE</DO>
</I_MOVE0>
<I_MOVE1 PHYSX_CHECK="P_CBG" NOT_TRIGGER="LADDER" LAST="A_CLIMBFORWARD">
    <DO>A_CLIMBEND</DO>
</I_MOVE1>
<!-- 포복에서 떨어지면 앉은 자세로 전환 -->
<IF PHYSX_CHECK="P_ITA" STANCE_RATE="T_PRONE" CAN_STANCE_CHANGE="T_CROUCH">
    <CHGSTANCE>T_PRONE_CROUCH</CHGSTANCE>
</IF>
<!-- 앉기 -->
<I_CROUCH PHYSX_CHECK="P_OTG | P_ITA | P_JMP"  IS_STANCE="T_CROUCH" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
</I_CROUCH>
<I_CROUCH PHYSX_CHECK="P_OTG | P_ITA | P_JMP" IS_STANCE="T_STAND" CAN_STANCE_CHANGE="T_CROUCH">
    <CHGSTANCE>T_CROUCH</CHGSTANCE>
    <CHGNOSPRINT/>    
</I_CROUCH>
<I_CROUCH PHYSX_CHECK="P_OTG | P_ITA | P_JMP" IS_STANCE="T_PRONE" CAN_STANCE_CHANGE="T_CROUCH">
    <CHGSTANCE>T_CROUCH</CHGSTANCE>
    <CHGNOSPRINT/>
    <CHGNOZOOM/>    
</I_CROUCH>

<!-- 엎드리기 -->
<I_PRONE PHYSX_CHECK="P_OTG" IS_STANCE="T_PRONE" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <CHGNOZOOM/>    
</I_PRONE>
<I_PRONE PHYSX_CHECK="P_OTG" IS_STANCE="T_STAND" CAN_STANCE_CHANGE="T_PRONE">
    <CHGSTANCE>T_PRONE</CHGSTANCE>
    <CHGNOSPRINT/>
    <CHGNOZOOM/>
</I_PRONE>
<I_PRONE PHYSX_CHECK="P_OTG" IS_STANCE="T_CROUCH" CAN_STANCE_CHANGE="T_PRONE">
    <CHGSTANCE>T_PRONE</CHGSTANCE>
    <CHGNOSPRINT/>
    <CHGNOZOOM/>
</I_PRONE>

<!-- 자세전환 -->
<I_JUMP PHYSX_CHECK="P_OTG" IS_STANCE="T_CROUCH" CAN_STANCE_CHANGE="T_STAND" >
    <CHGSTANCE>T_STAND</CHGSTANCE>
</I_JUMP>
<I_JUMP PHYSX_CHECK="P_OTG" IS_STANCE="T_PRONE" CAN_STANCE_CHANGE="T_STAND">
    <CHGNOZOOM/>
    <CHGSTANCE>T_STAND</CHGSTANCE>
</I_JUMP>

<!-- 점프 (JUMP) -->
<I_JUMP INPUT="I_MOVE0" PHYSX_CHECK="P_OTG | P_ITA" IS_STANCE="T_STAND" NOT_TRIGGER="CLIMB & CLIMBOVER">
    <CHGNOSPRINT/>
    <DO>A_JUMPTAKEOFFIDLE</DO>
</I_JUMP>
<I_JUMP PHYSX_CHECK="P_OTG | P_ITA" IS_STANCE="T_STAND" LAST="A_RUNFORWARD" NOT_TRIGGER="CLIMB & CLIMBOVER">
    <DO>A_JUMPTAKEOFFFW</DO>
</I_JUMP>
<I_JUMP PHYSX_CHECK="P_OTG | P_ITA" IS_STANCE="T_STAND" LAST="A_RUNFORWARDLEFT" NOT_TRIGGER="CLIMB & CLIMBOVER">
    <DO>A_JUMPTAKEOFFFWL</DO>
</I_JUMP>
<I_JUMP PHYSX_CHECK="P_OTG | P_ITA" IS_STANCE="T_STAND" LAST="A_RUNFORWARDRIGHT" NOT_TRIGGER="CLIMB & CLIMBOVER">
    <DO>A_JUMPTAKEOFFFWR</DO>
</I_JUMP>
<I_JUMP PHYSX_CHECK="P_OTG | P_ITA" IS_STANCE="T_STAND" LAST="A_RUNBACKWARD" NOT_TRIGGER="CLIMB & CLIMBOVER">
    <DO>A_JUMPTAKEOFFBW</DO>
</I_JUMP>
<I_JUMP PHYSX_CHECK="P_OTG | P_ITA" IS_STANCE="T_STAND" LAST="A_RUNBACKWARDLEFT" NOT_TRIGGER="CLIMB & CLIMBOVER">
    <DO>A_JUMPTAKEOFFBWL</DO>
</I_JUMP>
<I_JUMP PHYSX_CHECK="P_OTG | P_ITA" IS_STANCE="T_STAND" LAST="A_RUNBACKWARDRIGHT" NOT_TRIGGER="CLIMB & CLIMBOVER">
    <DO>A_JUMPTAKEOFFBWR</DO>
</I_JUMP>
<I_JUMP PHYSX_CHECK="P_OTG | P_ITA" IS_STANCE="T_STAND" LAST="A_RUNSTRAFELEFT" NOT_TRIGGER="CLIMB & CLIMBOVER">
    <DO>A_JUMPTAKEOFFSL</DO>
</I_JUMP>
<I_JUMP PHYSX_CHECK="P_OTG | P_ITA" IS_STANCE="T_STAND" LAST="A_RUNSTRAFERIGHT" NOT_TRIGGER="CLIMB & CLIMBOVER">
    <DO>A_JUMPTAKEOFFSR</DO>
</I_JUMP>
<I_JUMP PHYSX_CHECK="P_OTG | P_ITA" IS_STANCE="T_STAND" LAST="A_SPRINTSTOP" NOT_TRIGGER="CLIMB & CLIMBOVER">
    <DO>A_JUMPTAKEOFFIDLE</DO>
</I_JUMP>
<I_JUMP PHYSX_CHECK="P_OTG | P_ITA" IS_STANCE="T_STAND" LAST="A_SPRINTFORWARD" NOT_TRIGGER="CLIMB & CLIMBOVER">
    <DO>A_JUMPTAKEOFFSPRINTFW</DO>
</I_JUMP>
<I_JUMP PHYSX_CHECK="P_OTG | P_ITA" IS_STANCE="T_STAND" LAST="A_SPRINTFORWARDLEFT" NOT_TRIGGER="CLIMB & CLIMBOVER">
    <DO>A_JUMPTAKEOFFSPRINTFWL</DO>
</I_JUMP>
<I_JUMP PHYSX_CHECK="P_OTG | P_ITA" IS_STANCE="T_STAND" LAST="A_SPRINTFORWARDRIGHT" NOT_TRIGGER="CLIMB & CLIMBOVER">
    <DO>A_JUMPTAKEOFFSPRINTFWR</DO>
</I_JUMP>
<I_JUMP PHYSX_CHECK="P_CBG">
</I_JUMP>

<I_JUMP PHYSX_CHECK="P_CBG" NOT_TRIGGER="CLIMB" CAN_STANCE_CHANGE="T_STAND">
    <CHGSTANCE>T_STAND</CHGSTANCE>
    <DO>A_JUMPTAKEOFFIDLE</DO>
</I_JUMP>

<!-- 이동 -->
<I_MOVE1 PHYSX_CHECK="P_OTG" JUMP="FALSE" SPRINT="TRUE" CLIMB_ACTION="FALSE" CONDITION_CHECK="IS_SPRINT_ACTION & IS_MOVE">
    <DO>A_SPRINTFORWARD</DO>
</I_MOVE1>
<I_MOVE2 PHYSX_CHECK="P_OTG" JUMP="FALSE" SPRINT="TRUE" CLIMB_ACTION="FALSE" CONDITION_CHECK="IS_SPRINT_ACTION & IS_MOVE">
    <DO>A_SPRINTFORWARDRIGHT</DO>
</I_MOVE2>
<I_MOVE8 PHYSX_CHECK="P_OTG" JUMP="FALSE" SPRINT="TRUE" CLIMB_ACTION="FALSE" CONDITION_CHECK="IS_SPRINT_ACTION & IS_MOVE">
    <DO>A_SPRINTFORWARDLEFT</DO>
</I_MOVE8>
<I_MOVE4 PHYSX_CHECK="P_OTG" SPRINT="TRUE">
    <CHGNOSPRINT/>
</I_MOVE4>
<I_MOVE5 PHYSX_CHECK="P_OTG" SPRINT="TRUE">
    <CHGNOSPRINT/>
</I_MOVE5>
<I_MOVE6 PHYSX_CHECK="P_OTG" SPRINT="TRUE">
    <CHGNOSPRINT/>
</I_MOVE6>
<I_MOVE3 PHYSX_CHECK="P_OTG" SPRINT="TRUE">
    <CHGNOSPRINT/>
</I_MOVE3>
<I_MOVE7 PHYSX_CHECK="P_OTG" SPRINT="TRUE">
    <CHGNOSPRINT/>
</I_MOVE7>

<I_MOVE0 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND | T_PRONE" JUMP="FALSE" SPRINT="TRUE" PEACE="FALSE"
 NOT_LAST="A_SPRINT_CLIMBOVER & A_SOCIAL & A_IDLE & A_DEAD & A_LEFTTURN & A_RIGHTTURN">
    <DO>A_SPRINTSTOP</DO>
</I_MOVE0>
<I_MOVE0 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND | T_PRONE" JUMP="FALSE" SPRINT="FALSE" PEACE="FALSE" CONDITION_CHECK="IDLE_CHANGE_TIME"
 NOT_LAST="A_SPRINTSTOP & A_SOCIAL & A_IDLE & A_DEAD & A_LEFTTURN & A_RIGHTTURN & A_IDLE_T">
    <DO>A_IDLE</DO>
</I_MOVE0>
<I_MOVE0 PHYSX_CHECK="P_OTG" STANCE_RATE="T_CROUCH" PEACE="FALSE" SPRINT="FALSE" CONDITION_CHECK="IDLE_CHANGE_TIME"
 NOT_LAST="A_SPRINTSTOP & A_SOCIAL & A_IDLE & A_DEAD & A_LEFTTURN & A_RIGHTTURN & A_IDLE_T">
    <DO>A_IDLE</DO>
</I_MOVE0>

<I_MOVE0 PHYSX_CHECK="P_OTG" ZOOM="TRUE" PEACE="TRUE" CONDITION_CHECK="IDLE_CHANGE_TIME" NOT_LAST="A_WIDLE & A_DEAD & A_LEFTTURN & A_RIGHTTURN & A_WIDLE_T">
    <DO>A_WIDLE</DO>
</I_MOVE0>
<I_MOVE0 PHYSX_CHECK="P_OTG" ZOOM="FALSE" PEACE="TRUE" CONDITION_CHECK="IDLE_CHANGE_TIME"
NOT_LAST="A_SOCIAL & A_DEAD & A_LEFTTURN & A_RIGHTTURN & A_WIDLE_T">
    <DO>A_WIDLE</DO>
</I_MOVE0>

<I_MOVE1 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND" JUMP="FALSE" PEACE="TRUE" CONDITION_CHECK="IS_MOVE">
    <DO>A_WFORWARD</DO>
</I_MOVE1>
<I_MOVE2 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND" JUMP="FALSE" PEACE="TRUE" CONDITION_CHECK="IS_MOVE">
    <DO>A_WFORWARDRIGHT</DO>
</I_MOVE2>
<I_MOVE3 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND" JUMP="FALSE" PEACE="TRUE" CONDITION_CHECK="IS_MOVE">
    <DO>A_WSTRAFERIGHT</DO>
</I_MOVE3>
<I_MOVE4 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND" JUMP="FALSE" PEACE="TRUE" CONDITION_CHECK="IS_MOVE">
    <DO>A_WBACKWARDRIGHT</DO>
</I_MOVE4>
<I_MOVE5 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND" JUMP="FALSE" PEACE="TRUE" CONDITION_CHECK="IS_MOVE">
    <DO>A_WBACKWARD</DO>
</I_MOVE5>
<I_MOVE6 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND" JUMP="FALSE" PEACE="TRUE" CONDITION_CHECK="IS_MOVE">
    <DO>A_WBACKWARDLEFT</DO>
</I_MOVE6>
<I_MOVE7 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND" JUMP="FALSE" PEACE="TRUE" CONDITION_CHECK="IS_MOVE">
    <DO>A_WSTRAFELEFT</DO>
</I_MOVE7>
<I_MOVE8 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND" JUMP="FALSE" PEACE="TRUE" CONDITION_CHECK="IS_MOVE">
    <DO>A_WFORWARDLEFT</DO>
</I_MOVE8>

<I_MOVE1 PHYSX_CHECK="P_OTG" STANCE_RATE="T_CROUCH" PEACE="TRUE" CONDITION_CHECK="IS_MOVE">
    <DO>A_WFORWARD</DO>
</I_MOVE1>
<I_MOVE2 PHYSX_CHECK="P_OTG" STANCE_RATE="T_CROUCH" PEACE="TRUE" CONDITION_CHECK="IS_MOVE">
    <DO>A_WFORWARDRIGHT</DO>
</I_MOVE2>
<I_MOVE3 PHYSX_CHECK="P_OTG" STANCE_RATE="T_CROUCH" PEACE="TRUE" CONDITION_CHECK="IS_MOVE">
    <DO>A_WSTRAFERIGHT</DO>
</I_MOVE3>
<I_MOVE4 PHYSX_CHECK="P_OTG" STANCE_RATE="T_CROUCH" PEACE="TRUE" CONDITION_CHECK="IS_MOVE">
    <DO>A_WBACKWARDRIGHT</DO>
</I_MOVE4>
<I_MOVE5 PHYSX_CHECK="P_OTG" STANCE_RATE="T_CROUCH" PEACE="TRUE" CONDITION_CHECK="IS_MOVE">
    <DO>A_WBACKWARD</DO>
</I_MOVE5>
<I_MOVE6 PHYSX_CHECK="P_OTG" STANCE_RATE="T_CROUCH" PEACE="TRUE" CONDITION_CHECK="IS_MOVE">
    <DO>A_WBACKWARDLEFT</DO>
</I_MOVE6>
<I_MOVE7 PHYSX_CHECK="P_OTG" STANCE_RATE="T_CROUCH" PEACE="TRUE" CONDITION_CHECK="IS_MOVE">
    <DO>A_WSTRAFELEFT</DO>
</I_MOVE7>
<I_MOVE8 PHYSX_CHECK="P_OTG" STANCE_RATE="T_CROUCH" PEACE="TRUE" CONDITION_CHECK="IS_MOVE">
    <DO>A_WFORWARDLEFT</DO>
</I_MOVE8>

<I_MOVE1 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND" CLIMB_ACTION="FALSE" JUMP="FALSE" SPRINT="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <DO>A_RUNFORWARD</DO>
</I_MOVE1>
<I_MOVE2 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND" CLIMB_ACTION="FALSE" JUMP="FALSE" SPRINT="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <DO>A_RUNFORWARDRIGHT</DO>
</I_MOVE2>
<I_MOVE3 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND" CLIMB_ACTION="FALSE" JUMP="FALSE" SPRINT="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <DO>A_RUNSTRAFERIGHT</DO>
</I_MOVE3>
<I_MOVE4 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND" CLIMB_ACTION="FALSE" JUMP="FALSE" SPRINT="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <DO>A_RUNBACKWARDRIGHT</DO>
</I_MOVE4>
<I_MOVE5 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND" CLIMB_ACTION="FALSE" JUMP="FALSE" SPRINT="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <DO>A_RUNBACKWARD</DO>
</I_MOVE5>
<I_MOVE6 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND" CLIMB_ACTION="FALSE" JUMP="FALSE" SPRINT="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <DO>A_RUNBACKWARDLEFT</DO>
</I_MOVE6>
<I_MOVE7 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND" CLIMB_ACTION="FALSE" JUMP="FALSE" SPRINT="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <DO>A_RUNSTRAFELEFT</DO>
</I_MOVE7>
<I_MOVE8 PHYSX_CHECK="P_OTG" STANCE_RATE="T_STAND" CLIMB_ACTION="FALSE" JUMP="FALSE" SPRINT="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <DO>A_RUNFORWARDLEFT</DO>
</I_MOVE8>

<I_MOVE1 PHYSX_CHECK="P_OTG" STANCE_RATE="T_CROUCH" SPRINT="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <DO>A_RUNFORWARD</DO>
</I_MOVE1>
<I_MOVE2 PHYSX_CHECK="P_OTG" STANCE_RATE="T_CROUCH" SPRINT="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <DO>A_RUNFORWARDRIGHT</DO>
</I_MOVE2>
<I_MOVE3 PHYSX_CHECK="P_OTG" STANCE_RATE="T_CROUCH" SPRINT="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <DO>A_RUNSTRAFERIGHT</DO>
</I_MOVE3>
<I_MOVE4 PHYSX_CHECK="P_OTG" STANCE_RATE="T_CROUCH" SPRINT="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <DO>A_RUNBACKWARDRIGHT</DO>
</I_MOVE4>
<I_MOVE5 PHYSX_CHECK="P_OTG" STANCE_RATE="T_CROUCH" SPRINT="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <DO>A_RUNBACKWARD</DO>
</I_MOVE5>
<I_MOVE6 PHYSX_CHECK="P_OTG" STANCE_RATE="T_CROUCH" SPRINT="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <DO>A_RUNBACKWARDLEFT</DO>
</I_MOVE6>
<I_MOVE7 PHYSX_CHECK="P_OTG" STANCE_RATE="T_CROUCH" SPRINT="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <DO>A_RUNSTRAFELEFT</DO>
</I_MOVE7>
<I_MOVE8 PHYSX_CHECK="P_OTG" STANCE_RATE="T_CROUCH" SPRINT="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <DO>A_RUNFORWARDLEFT</DO>
</I_MOVE8>

<I_MOVE1 PHYSX_CHECK="P_OTG" STANCE_RATE="T_PRONE" CONDITION_CHECK="IS_MOVE">
    <CHGNOZOOM/>
    <DO>A_RUNFORWARD</DO>
</I_MOVE1>
<I_MOVE2 PHYSX_CHECK="P_OTG" STANCE_RATE="T_PRONE" JUMP="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <CHGNOZOOM/>
    <DO>A_RUNFORWARDRIGHT</DO>
</I_MOVE2>
<I_MOVE3 PHYSX_CHECK="P_OTG" STANCE_RATE="T_PRONE" JUMP="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <CHGNOZOOM/>
    <DO>A_RUNSTRAFERIGHT</DO>
</I_MOVE3>
<I_MOVE4 PHYSX_CHECK="P_OTG" STANCE_RATE="T_PRONE" JUMP="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <CHGNOZOOM/>
    <DO>A_RUNBACKWARDRIGHT</DO>
</I_MOVE4>
<I_MOVE5 PHYSX_CHECK="P_OTG" STANCE_RATE="T_PRONE" JUMP="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <CHGNOZOOM/>
    <DO>A_RUNBACKWARD</DO>
</I_MOVE5>
<I_MOVE6 PHYSX_CHECK="P_OTG" STANCE_RATE="T_PRONE" JUMP="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <CHGNOZOOM/>
    <DO>A_RUNBACKWARDLEFT</DO>
</I_MOVE6>
<I_MOVE7 PHYSX_CHECK="P_OTG" STANCE_RATE="T_PRONE" JUMP="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <CHGNOZOOM/>
    <DO>A_RUNSTRAFELEFT</DO>
</I_MOVE7>
<I_MOVE8 PHYSX_CHECK="P_OTG" STANCE_RATE="T_PRONE" JUMP="FALSE" PEACE="FALSE" CONDITION_CHECK="IS_MOVE">
    <CHGNOZOOM/>
    <DO>A_RUNFORWARDLEFT</DO>
</I_MOVE8>

<!-- 재장전 -->
<I_RELOAD PHYSX_CHECK="P_OTG | P_ITA | P_JMP"  NOT_LASTSUB="S_MELEE & S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_THROW & S_THROW_READY & S_THROW_FIRE"
NOT_LAST="A_DEAD"  ZERO_MAGAZINE="SLOT_CURRENT" AMMO="SLOT_CURRENT" CONDITION_CHECK="IS_RELOAD_WEAPON">
    <CHGNOZOOM/>
    <CHGNOSPRINT/>
    <DOSUB>S_RELOADFULL</DOSUB>
</I_RELOAD>
<I_RELOAD PHYSX_CHECK="P_OTG | P_ITA | P_JMP" NOT_LASTSUB="S_MELEE & S_SWITCHWEAPONRETURNARM S_SWITCHWEAPONDOWNARM & S_THROW & S_THROW_READY & S_THROW_FIRE"
NOT_LAST="A_DEAD" NOT_FULLMAGAZINE="SLOT_CURRENT" AMMO="SLOT_CURRENT" CONDITION_CHECK="IS_RELOAD_WEAPON">
    <CHGNOZOOM/>
    <CHGNOSPRINT/>
    <DOSUB>S_RELOADHALF</DOSUB>
</I_RELOAD>
<I_FIRE PHYSX_CHECK="P_OTG | P_ITA | P_JMP" NOT_LASTSUB="S_FIRE & S_MELEE & S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_THROW_FIRE"
NOT_LAST="A_DEAD" ZERO_MAGAZINE="SLOT_CURRENT" AMMO="SLOT_CURRENT" CONDITION_CHECK="IS_RELOAD_WEAPON">
    <CHGNOZOOM/>
    <CHGNOSPRINT/>
    <DOSUB>S_RELOADFULL</DOSUB>
</I_FIRE>

<!-- 조준 -->
<I_ZOOM PHYSX_CHECK="P_OTG | P_ITA | P_JMP" ZOOM="FALSE" CONDITION_CHECK="IS_ZOOM" NOT_LAST="A_DEAD"
NOT_LASTSUB="S_THROW & S_THROW_READY & S_THROW_FIRE & S_MELEE & S_RELOADHALF & S_RELOADFULL & S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM">
    <CHGZOOM/>	
    <CHGNOSPRINT/>
</I_ZOOM>
<I_ZOOM PHYSX_CHECK="P_OTG | P_ITA | P_JMP" ZOOM="TRUE" CONDITION_CHECK="IS_ZOOM" NOT_LAST="A_DEAD"
NOT_LASTSUB="S_THROW & S_THROW_READY & S_THROW_FIRE & S_MELEE & S_RELOADHALF & S_RELOADFULL & S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM">
    <CHGNOZOOM/>
</I_ZOOM>

<!-- 메인 투척무기 -->
<I_PRIMARY_THROW_READY PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE" NOT_CURRENT_SLOT="SLOT_PRIMARY_THROW"
THROW_READY="SLOT_PRIMARY_THROW" NOT_EMTPY_MAGAZINE="SLOT_PRIMARY_THROW" NOT_LAST="A_DEAD"
NOT_LASTSUB="S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_FIRE & S_THROW & S_THROW_READY & S_THROW_FIRE & S_MELEE">
    <CHGNOZOOM/>
    <CHGNOSPRINT/>
    <THROW_SLOT>SLOT_PRIMARY_THROW</THROW_SLOT>
    <CHANGE_SLOT_THROW_READY>SLOT_PRIMARY_THROW</CHANGE_SLOT_THROW_READY>
</I_PRIMARY_THROW_READY>
<I_PRIMARY_THROW_READY PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE" CURRENT_SLOT="SLOT_PRIMARY_THROW" THROW_READY="SLOT_PRIMARY_THROW"
NOT_EMTPY_MAGAZINE="SLOT_PRIMARY_THROW" NOT_LAST="A_DEAD"
NOT_LASTSUB="S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_FIRE & S_THROW & S_THROW_READY & S_THROW_FIRE & S_MELEE">
    <CHGNOZOOM/>
    <CHGNOSPRINT/>
    <THROW_SLOT>SLOT_PRIMARY_THROW</THROW_SLOT>
    <DOSUB>S_THROW_READY</DOSUB>
</I_PRIMARY_THROW_READY>
<I_PRIMARY_THROW_READY PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE" THROW_FIRE="SLOT_PRIMARY_THROW" NOT_LAST="A_DEAD"
NOT_LASTSUB="S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_FIRE & S_THROW & S_THROW_READY & S_THROW_FIRE & S_MELEE">
    <CHGNOZOOM/>
    <CHGNOSPRINT/>
    <THROW_SLOT>SLOT_PRIMARY_THROW</THROW_SLOT>
    <CHANGE_SLOT_THROW_FIRE>SLOT_PRIMARY_THROW</CHANGE_SLOT_THROW_FIRE>
</I_PRIMARY_THROW_READY>
<I_PRIMARY_THROW PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE"
NOT_LASTSUB="S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM" NOT_LAST="A_DEAD" THROW_ITEM="SLOT_PRIMARY_THROW">
    <RESVS>S_THROW</RESVS>
</I_PRIMARY_THROW>

<!-- 서브 투척무기 -->
<I_SECOND_THROW_READY PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE" NOT_CURRENT_SLOT="SLOT_SECOND_THROW"
THROW_READY="SLOT_SECOND_THROW" NOT_EMTPY_MAGAZINE="SLOT_SECOND_THROW" NOT_LAST="A_DEAD"
NOT_LASTSUB="S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_FIRE & S_THROW & S_THROW_READY & S_THROW_FIRE & S_MELEE">
    <CHGNOZOOM/>
    <CHGNOSPRINT/>
    <THROW_SLOT>SLOT_SECOND_THROW</THROW_SLOT>
    <CHANGE_SLOT_THROW_READY>SLOT_SECOND_THROW</CHANGE_SLOT_THROW_READY>
</I_SECOND_THROW_READY>
<I_SECOND_THROW_READY PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE" CURRENT_SLOT="SLOT_SECOND_THROW"
THROW_READY="SLOT_SECOND_THROW" NOT_EMTPY_MAGAZINE="SLOT_SECOND_THROW" NOT_LAST="A_DEAD"
NOT_LASTSUB="S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_FIRE & S_THROW & S_THROW_READY & S_THROW_FIRE & S_MELEE">
    <CHGNOZOOM/>
    <CHGNOSPRINT/>
    <THROW_SLOT>SLOT_SECOND_THROW</THROW_SLOT>
    <DOSUB>S_THROW_READY</DOSUB>
</I_SECOND_THROW_READY>
<I_SECOND_THROW_READY PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE" THROW_FIRE="SLOT_SECOND_THROW" NOT_LAST="A_DEAD"
NOT_LASTSUB="S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_FIRE & S_THROW & S_THROW_READY & S_THROW_FIRE & S_MELEE">
    <CHGNOZOOM/>
    <CHGNOSPRINT/>
    <THROW_SLOT>SLOT_SECOND_THROW</THROW_SLOT>
    <CHANGE_SLOT_THROW_FIRE>SLOT_SECOND_THROW</CHANGE_SLOT_THROW_FIRE>
</I_SECOND_THROW_READY>
<I_SECOND_THROW PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE" NOT_LAST="A_DEAD" THROW_ITEM="SLOT_SECOND_THROW"
NOT_LASTSUB="S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM">
    <RESVS>S_THROW</RESVS>
</I_SECOND_THROW>

<!-- 근접 -->
<I_MELEE PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE" NOT_LAST="A_DEAD"
NOT_LASTSUB="S_MELEE & S_THROW & S_THROW_FIRE & S_SWITCHWEAPONRETURNARM">
    <CHGNOSPRINT/>
    <CHGNOZOOM/>
    <DOSUB>S_MELEE</DOSUB>
    <MELEE_TYPE>2</MELEE_TYPE>
</I_MELEE>
<I_FIRE PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE" CURRENT_SLOT="SLOT_MELEE" IS_FIRE_READY="SLOT_MELEE"
NOT_LAST="A_DEAD" NOT_LASTSUB="S_RELOADHALF & S_RELOADFULL & S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_THROW & S_THROW_READY & S_THROW_FIRE & S_MELEE">
    <CHGNOSPRINT/>
    <CHGNOZOOM/>
    <DOSUB>S_MELEE</DOSUB>
    <MELEE_TYPE>0</MELEE_TYPE>
</I_FIRE>
<I_R_FIRE PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE" CURRENT_SLOT="SLOT_MELEE" IS_FIRE_READY="SLOT_MELEE" NOT_LAST="A_DEAD"
NOT_LASTSUB="S_RELOADHALF & S_RELOADFULL & S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_THROW & S_THROW_READY & S_THROW_FIRE & S_MELEE">
    <CHGNOSPRINT/>
    <CHGNOZOOM/>
    <DOSUB>S_MELEE</DOSUB>
    <MELEE_TYPE>1</MELEE_TYPE>
</I_R_FIRE>

<!-- 총알이 없다면 리로드 -->
<IF PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE" AMMO="SLOT_CURRENT" ZERO_MAGAZINE="SLOT_CURRENT" CONDITION_CHECK="IS_RELOAD_WEAPON"
NOT_LASTSUB="S_FIRE & S_WEAPONSWITCH & S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_RELOADHALF & S_RELOADFULL">
    <CHGNOZOOM/>
    <CHGNOSPRINT/>
    <DOSUB>S_RELOADFULL</DOSUB>
</IF>

<!-- 총알이 없고, 탄창도 없다면 무기 교체 -->
<I_FIRE PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE" CURRENT_SLOT="SLOT_PRIMARY" CONDITION_CHECK="IS_SWITCH_WEAPON & IS_RELOAD_WEAPON"
ZERO_MAGAZINE="SLOT_CURRENT"  ZERO_AMMO="SLOT_CURRENT">
    <CHGNOZOOM/>
    <DRYFIRE/>
    <SWITCH_WEAPON/>
</I_FIRE>
<I_FIRE PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE" CURRENT_SLOT="SLOT_SECOND" CONDITION_CHECK="IS_SWITCH_WEAPON & IS_RELOAD_WEAPON"
ZERO_MAGAZINE="SLOT_CURRENT" ZERO_AMMO="SLOT_CURRENT">
    <CHGNOZOOM/>
    <DRYFIRE/>
    <SWITCH_WEAPON/>
</I_FIRE>

<!-- 격발 -->
<I_FIRE PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE" CURRENT_SLOT="SLOT_PRIMARY" IS_FIRE_READY="SLOT_PRIMARY" NOT_LAST="A_DEAD"
NOT_LASTSUB="S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_THROW & S_THROW_READY & S_THROW_FIRE & S_MELEE & S_RELOADHALF & S_RELOADFULL">
    <CHGNOSPRINT/>
    <DOSUB>S_FIRE</DOSUB>
</I_FIRE>
<I_FIRE PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE" CURRENT_SLOT="SLOT_SECOND" IS_FIRE_READY="SLOT_SECOND" NOT_LAST="A_DEAD"
NOT_LASTSUB="S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_THROW & S_THROW_READY & S_THROW_FIRE & S_MELEE & S_RELOADHALF & S_RELOADFULL">
    <CHGNOSPRINT/>
    <DOSUB>S_FIRE</DOSUB>
</I_FIRE>
<I_FIRE PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE" CURRENT_SLOT="SLOT_DRONE" IS_FIRE_READY="SLOT_DRONE" NOT_LAST="A_DEAD"
NOT_LASTSUB="S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_THROW & S_THROW_READY & S_THROW_FIRE & S_MELEE & S_RELOADHALF & S_RELOADFULL">
    <CHGNOSPRINT/>
    <DOSUB>S_FIRE</DOSUB>
</I_FIRE>

<I_R_FIRE PHYSX_CHECK="P_OTG | P_ITA | P_JMP" STANCE_RATE="T_STAND | T_CROUCH | T_PRONE" CURRENT_SLOT="SLOT_SECOND" IS_FIRE_READY="SLOT_SECOND" NOT_LAST="A_DEAD"
NOT_LASTSUB="S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_THROW & S_THROW_READY & S_THROW_FIRE & S_MELEE & S_RELOADHALF & S_RELOADFULL">
    <DOSUB>S_FIRE</DOSUB>
</I_R_FIRE>

<I_R_FIRE PHYSX_CHECK="P_OTG | P_ITA" CURRENT_SLOT="SLOT_PRIMARY" SPRINT="TRUE" NOT_LAST="A_DEAD"
NOT_LASTSUB="S_WEAPONSWITCH & S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_RELOADHALF & S_RELOADFULL">
    <CHGNOSPRINT/>
    <DOSUB>S_NONE</DOSUB>
</I_R_FIRE>
<I_R_FIRE PHYSX_CHECK="P_OTG | P_ITA" CURRENT_SLOT="SLOT_SECOND" SPRINT="TRUE" NOT_LAST="A_DEAD"
NOT_LASTSUB="S_WEAPONSWITCH & S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_RELOADHALF & S_RELOADFULL">
    <CHGNOSPRINT/>
    <DOSUB>S_NONE</DOSUB>
</I_R_FIRE>
<I_R_FIRE PHYSX_CHECK="P_OTG | P_ITA" CURRENT_SLOT="SLOT_DRONE" SPRINT="TRUE" NOT_LAST="A_DEAD"
NOT_LASTSUB="S_WEAPONSWITCH & S_SWITCHWEAPONRETURNARM & S_SWITCHWEAPONDOWNARM & S_RELOADHALF & S_RELOADFULL">
    <CHGNOSPRINT/>
    <DOSUB>S_NONE</DOSUB>
</I_R_FIRE>

<!-- 격발, 달리기 캔슬 -->
<!-- <I_FIRE PHYSX_CHECK="P_OTG | P_ITA" SPRINT="TRUE" CURRENT_SLOT="SLOT_PRIMARY">
    <CHGNOSPRINT/>
</I_FIRE>
<I_FIRE PHYSX_CHECK="P_OTG | P_ITA" SPRINT="TRUE" CURRENT_SLOT="SLOT_SECOND">
    <CHGNOSPRINT/>
</I_FIRE>
<I_FIRE PHYSX_CHECK="P_OTG | P_ITA" SPRINT="TRUE" CURRENT_SLOT="SLOT_DRONE">
    <CHGNOSPRINT/>
</I_FIRE> -->